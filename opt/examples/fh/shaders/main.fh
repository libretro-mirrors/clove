fn love_joystick_pressed(j) {
}

fn love_mousepressed(m) {
}

fn love_mousereleased(m) {
}

fn love_wheelmoved(y) {
}

fn love_textinput(text) {
}

fn love_keypressed(key) {
}

fn love_keyreleased(key) {
}

fn love_quit() {
}

fn love_focus(focused) {
}

fn love_load()  {
    let self = {};

let pixelcode = 
    "extern Image img2; " +
    "extern Image img3; " +
    "vec4 effect( vec4 color, Image tex, vec2 texture_coords, vec2 screen_coords )" +
    "{ " +
     "   vec4 texcolor = Texel(img2, texture_coords); " +
     "   vec4 texcolor2 = Texel(img3, texture_coords); " +
     "   return mix(texcolor, texcolor2, 0.4 ) * color;"  +
     " } ";
 
let vertexcode = 
    "vec4 position( mat4 transform_projection, vec4 vertex_position )" +
    "{" +
     "   return transform_projection * vertex_position;" +
    "}";
 

    self.shader = love_graphics_newShader(vertexcode, pixelcode);

    self.image = love_graphics_newImage("../hey.png");
    self.image2 = love_graphics_newImage("../1.png");

    love_shader_sendTexture(self.shader, "img2", self.image2);
    love_shader_sendTexture(self.shader, "img3", self.image);

    println("Maximum number of textures per shader is: ", love_graphics_getMaxTextureUnits());

    love_draw(self);
    love_update(1, self);

    return self;
}

fn love_update(dt, self) {
    if (love_keyboard_isDown("esc")) {
        love_event_quit();
    }
}

fn love_draw(self) {
    love_graphics_setShader(self.shader);
    love_graphics_draw(self.image, 100, 100);
    love_graphics_setShader(null);
    love_graphics_draw(self.image2, 150, 100);
    love_graphics_print("" + love_timer_getFPS(), 10, 10);
}

fn main() {

}
