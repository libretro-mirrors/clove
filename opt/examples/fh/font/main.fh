fn love_joystick_pressed(j) {
}

fn love_mousepressed(m) {
}

fn love_mousereleased(m) {
}

fn love_wheelmoved(y) {
}

fn love_textinput(text) {
}

fn love_keypressed(key) {
}

fn love_keyreleased(key) {
}

fn love_quit() {
}

fn love_focus(focused) {
}

fn love_update(dt) {

}

fn love_load()  {
    let self = {};

    let big = love_graphics_newFont(36);
    self.bigFont = big;

    self.small = love_graphics_newFont("vera.ttf", 16);
    love_font_setFilter(self.small, "nearest", "nearest", love_graphics_getMaxAnisotropy());

    println(love_font_getHeight(self.bigFont), " ",
            love_font_getWidth(self.bigFont, "Hello world!"), " ",
            love_font_getBaseline(self.bigFont), " ",
            love_font_getAscent(self.bigFont), " ",
            love_font_getDescent(self.bigFont));

    self.text = love_font_getWrap(self.small, "Hellothereboy!", 30);
    println("Total wrapped lines: ", self.text[1]);

    let text = " abcd\n";
    self.bitmapFont = love_graphics_newBitmapFont("f1.png", text, 9);
    love_font_setFilter(self.bitmapFont, "nearest", "nearest", 1.0);
    println("BitmapFont filter: \n", love_font_getFilter(self.bitmapFont));

    self.text_bitmap = love_font_getWrap(self.bitmapFont, "abcd dcba dac cac acc cac", 40);
    println("Total wrapped lines for text bitmap: ", self.text_bitmap[1]);

    love_draw(self);
    return self;
}

fn love_draw(self) {
    love_graphics_setFont(self.bigFont);
    love_graphics_print("Hello world!", 250, 270);
    let cf = love_graphics_getFont();
    love_graphics_setFont(cf);
    love_graphics_setFont(self.small);
    love_graphics_print("Hi", 150, 100, 90, 10, 10);
    love_graphics_print(self.text[0], 300, 100);
    love_graphics_setFont(self.bitmapFont);
    love_graphics_print(self.text_bitmap[0], 260, 350, 0, 2, 2);
}

fn main() {

}
